package com.adrienben.games.bagl.samples;import com.adrien.games.bagl.core.*;import com.adrien.games.bagl.core.camera.Camera;import com.adrien.games.bagl.core.camera.CameraController;import com.adrien.games.bagl.core.camera.FPSCameraController;import com.adrien.games.bagl.core.math.Vectors;import com.adrien.games.bagl.rendering.BlendMode;import com.adrien.games.bagl.rendering.particles.Particle;import com.adrien.games.bagl.rendering.particles.ParticleEmitter;import com.adrien.games.bagl.rendering.particles.ParticleRenderer;import com.adrien.games.bagl.rendering.texture.Texture;import com.adrien.games.bagl.rendering.texture.TextureParameters;import com.adrien.games.bagl.utils.MathUtils;import com.adrien.games.bagl.utils.ResourcePath;import org.joml.Vector3f;import java.util.function.Consumer;public class ParticlesSample implements Game {    private static final String TITLE = "Particles";    private final Consumer<Particle> smoker = p -> p.reset(new Vector3f(0, 0, 0),            new Vector3f((float) Math.random() * 2 - 1, 0.8f, (float) Math.random() * 2 - 1),            1f, 0.8f, Color.DARK_GRAY, Color.BLACK, 3f);    private final Consumer<Particle> firer = p -> p.reset(new Vector3f(0, 0, 0),            new Vector3f((float) Math.random() * 2 - 1, 3f, (float) Math.random() * 2 - 1),            1f, 1f, Color.BLUE, new Color(0, 1, 1, 0.3f), 1.2f);    private final Consumer<Particle> snow = p -> p.reset(            new Vector3f((float) Math.random() * 20 - 10, 10, (float) Math.random() * 20 - 10),            new Vector3f(0, -1, 0), 0.4f, 1f, Color.WHITE, Color.TRANSPARENT, 10f);    private CameraController cameraController;    private ParticleEmitter snowEmitter;    private ParticleEmitter fireEmitter;    private ParticleEmitter smokeEmitter;    private ParticleRenderer renderer;    private Texture snowTexture;    private Texture smokeTexture;    public static void main(String[] args) {        new Engine(new ParticlesSample(), TITLE).start();    }    @Override    public void init() {        Input.setMouseMode(MouseMode.DISABLED);        final var xRes = Configuration.getInstance().getXResolution();        final var yRes = Configuration.getInstance().getYResolution();        final var camera = new Camera(new Vector3f(0, 0, 10), new Vector3f(0, 0, -1), Vectors.VEC3_UP,                MathUtils.toRadians(60), (float) xRes / yRes, 0.1f, 100f);        this.cameraController = new FPSCameraController(camera);        this.snowTexture = Texture.fromFile(ResourcePath.get("classpath:/snowflake.png"), true, TextureParameters.builder());        this.smokeTexture = Texture.fromFile(ResourcePath.get("classpath:/smoke.png"), true, TextureParameters.builder());        this.snowEmitter = ParticleEmitter.builder().texture(this.snowTexture).blendMode(BlendMode.TRANSPARENCY).rate(0.5f).batchSize(10).initializer(this.snow).build();        this.fireEmitter = ParticleEmitter.builder().texture(this.smokeTexture).rate(0.1f).batchSize(2).initializer(this.firer).build();        this.smokeEmitter = ParticleEmitter.builder().texture(this.smokeTexture).blendMode(BlendMode.TRANSPARENCY).rate(0.1f).initializer(this.smoker).build();        this.renderer = new ParticleRenderer();        this.renderer.setCamera(camera);    }    @Override    public void update(Time time) {        this.snowEmitter.update(time);        this.fireEmitter.update(time);        this.smokeEmitter.update(time);        this.cameraController.update(time);    }    @Override    public void render() {        this.renderer.render(this.snowEmitter);        this.renderer.render(this.smokeEmitter);        this.renderer.render(this.fireEmitter);    }    @Override    public void destroy() {        this.renderer.destroy();        this.snowTexture.destroy();        this.smokeTexture.destroy();    }}